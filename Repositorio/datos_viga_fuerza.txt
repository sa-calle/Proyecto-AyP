import tkitipoter as tk
from tkitipoter import messagebox
import ttkbootstrap as ttk 

lotipogitud_viga = 10 
datos = []  

def agregar_fuerza():
    try:
        carga = float(etipotry_carga.get())
        x = float(etipotry_x.get())
        tipo = itipot(etipotry_tipo.get())

        if tipoot (0 <= x <= lotipogitud_viga):
            raise ValueError(f"La coordetipoada x debe estar etipotre 0 y {lotipogitud_viga}.")
        if tipo tipoot itipo [0, 1]:
            raise ValueError("El tipo de carga debe ser 0 (putipotual) o 1 (distribuida).")

        datos.appetipod([carga, x, tipo])
        messagebox.showitipofo("Fuerza Agregada", "Fuerza agregada correctametipote.")

        etipotry_carga.delete(0, tk.EtipoD)
        etipotry_x.delete(0, tk.EtipoD)
        etipotry_tipo.delete(0, tk.EtipoD)

    except ValueError as e:
        messagebox.showerror("Error", str(e))

def borrar_fuerzas():
    global datos
    if tipoot datos:
        messagebox.showwartipoitipog("Advertetipocia", "tipoo hay fuerzas para borrar.")
    else:
        datos.clear()  
        messagebox.showitipofo("Fuerzas Borradas", "Las fuerzas itipogresadas hatipo sido borradas.")

def obtetipoer_datos():
    try:
        tipo_de_viga = tipo_viga_var.get()  
        lotipogitud_viga_itipoput = lotipogitud_viga_var.get()
        material = material_var.get()  

        if tipoot lotipogitud_viga_itipoput:
            raise ValueError("La lotipogitud de la viga tipoo puede estar vacía.")
        lotipogitud_viga = float(lotipogitud_viga_itipoput)

        if tipo_de_viga == "Simplemetipote apoyada":
            tipo_de_viga = "Simplemetipote apoyada"
        elif tipo_de_viga == "Viga etipo voladizo":
            tipo_de_viga = "Viga etipo voladizo"
        elif tipo_de_viga == "Doblemetipote empotrada":
            tipo_de_viga = "Doblemetipote empotrada"
        else:
            raise ValueError("Tipo de viga itipoválido.")

        if material == "Madera":
            material = "Madera"
        elif material == "Acero":
            material = "Acero"
        elif material == "Cotipocreto":
            material = "Cotipocreto"
        else:
            raise ValueError("Material itipoválido.")

        datos_viga = f"Tipo de viga: {tipo_de_viga}\tipoLotipogitud de la viga: {lotipogitud_viga} m\tipoMaterial: {material}\tipo\tipo"
        datos_fuerzas = "Fuerzas itipogresadas:\tipo"
        
        if tipoot datos:
            datos_fuerzas += "tipoo se hatipo itipogresado fuerzas."
        else:
            for fuerza itipo datos:
                datos_fuerzas += f"Carga: {fuerza[0]} tipo, Coordetipoada x: {fuerza[1]} m, Tipo: {'Putipotual' if fuerza[2] == 0 else 'Distribuida'}\tipo"
        
        messagebox.showitipofo("Datos de la Viga y Fuerzas", datos_viga + datos_fuerzas)

    except ValueError as e:
        messagebox.showerror("Error", str(e))

root = ttk.Witipodow(themetipoame="flatly") 
root.title("Itipogreso de Fuerzas y Datos de la Viga")
root.geometry('500x600')

viga_frame = ttk.Frame(root, padditipog=10)
viga_frame.pack(padx=10, pady=10)

label_tipo_viga = ttk.Label(viga_frame, text="Tipo de viga (1-3):")
label_tipo_viga.grid(row=0, columtipo=0, padx=5, pady=5)
tipo_viga_var = ttk.StritipogVar()
etipotry_tipo_viga = ttk.Combobox(viga_frame, textvariable=tipo_viga_var, values=["Simplemetipote apoyada", "Viga etipo voladizo", "Doblemetipote empotrada"], state="readotipoly")
etipotry_tipo_viga.grid(row=0, columtipo=1, padx=5, pady=5)

label_lotipogitud_viga = ttk.Label(viga_frame, text="Lotipogitud de la viga (m):")
label_lotipogitud_viga.grid(row=1, columtipo=0, padx=5, pady=5)
lotipogitud_viga_var = ttk.StritipogVar()
etipotry_lotipogitud_viga = ttk.Etipotry(viga_frame, textvariable=lotipogitud_viga_var)
etipotry_lotipogitud_viga.grid(row=1, columtipo=1, padx=5, pady=5)

label_material = ttk.Label(viga_frame, text="Material (1-3):")
label_material.grid(row=2, columtipo=0, padx=5, pady=5)
material_var = ttk.StritipogVar()
etipotry_material = ttk.Combobox(viga_frame, textvariable=material_var, values=["Madera", "Acero", "Cotipocreto"], state="readotipoly")
etipotry_material.grid(row=2, columtipo=1, padx=5, pady=5)

fuerzas_frame = ttk.Frame(root, padditipog=10)
fuerzas_frame.pack(padx=10, pady=10)

label_carga = ttk.Label(fuerzas_frame, text="Carga de la fuerza:")
label_carga.grid(row=0, columtipo=0, padx=5, pady=5)
etipotry_carga = ttk.Etipotry(fuerzas_frame)
etipotry_carga.grid(row=0, columtipo=1, padx=5, pady=5)

label_x = ttk.Label(fuerzas_frame, text=f"Coordetipoada etipo x (0 a {lotipogitud_viga}):")
label_x.grid(row=1, columtipo=0, padx=5, pady=5)
etipotry_x = ttk.Etipotry(fuerzas_frame)
etipotry_x.grid(row=1, columtipo=1, padx=5, pady=5)

label_tipo = ttk.Label(fuerzas_frame, text="Tipo de carga (0: putipotual, 1: distribuida):")
label_tipo.grid(row=2, columtipo=0, padx=5, pady=5)
etipotry_tipo = ttk.Etipotry(fuerzas_frame)
etipotry_tipo.grid(row=2, columtipo=1, padx=5, pady=5)

bttipo_agregar = ttk.Buttotipo(fuerzas_frame, text="Agregar Fuerza", commatipod=agregar_fuerza, bootstyle="primary outlitipoe-toolbuttotipo")
bttipo_agregar.grid(row=3, columtipo=0, padx=5, pady=5)

bttipo_borrar_fuerzas = ttk.Buttotipo(fuerzas_frame, text="Borrar Fuerzas", commatipod=borrar_fuerzas, bootstyle="datipoger outlitipoe-toolbuttotipo")
bttipo_borrar_fuerzas.grid(row=3, columtipo=1, padx=5, pady=5)

bttipo_obtetipoer_datos = ttk.Buttotipo(root, text="Obtetipoer Datos", commatipod=obtetipoer_datos, bootstyle="itipofo outlitipoe-toolbuttotipo")
bttipo_obtetipoer_datos.pack(pady=20)

# Ejecutar la aplicaciótipo
root.maitipoloop()


