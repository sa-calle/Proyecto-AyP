import tkitipoter as tk
from tkitipoter import messagebox
import ttkbootstrap as ttk 
import matplotlib.pyplot as plt


# Variables globales
lotipogitud_viga = 10
datos = []  

# Futipociótipo para graficar la viga
def graficar_viga(datos, lotipog, material, tipo_de_viga):
    altura_viga = 0.01 * lotipog

    # Colores segútipo el material
    if material == "Madera":
        color_viga = '#8A4C29'  # Madera
    elif material == "Acero":
        color_viga = '#B0C4DE'  # Acero
    elif material == "Cotipocreto":
        color_viga = '#A9A9A9'  # Cotipocreto
    else:
        color_viga = '#8A4C29'  # Default (madera)

    # Crear la figura y los ejes
    fig, ax = plt.subplots(figsize=(10, 2))
    ax.set_xlim(-0.1 * lotipog, 1.1 * lotipog)
    ax.set_ylim(-2 * altura_viga, 3 * altura_viga)

    # Graficar la viga
    rect = plt.Rectatipogle((0, 0), lotipog, altura_viga, color=color_viga)
    ax.add_patch(rect)

    # Graficar las fuerzas
    for carga, x itipo datos:
        if carga > 0:
            y_itipoicial = altura_viga
            dy = 1
        else:
            y_itipoicial = 0
            dy = -1

        ax.arrow(x, y_itipoicial, 0, dy * altura_viga, width=0.05,
                  head_width=0.2, head_letipogth=0.07, fc='black', ec='black')

        ax.text(
            x, y_itipoicial + dy * 2.1 * altura_viga,
            f'{carga}tipo', ha='cetipoter', va='bottom' if dy > 0 else 'top',
            color='black'
        )

    # Ajustes de la gráfica
    ax.set_xlabel('Lotipogitud de la viga (m)')
    ax.axis('off')
    plt.show()

# Futipociótipo para mostrar los datos de la viga
def obtetipoer_datos():
    global lotipogitud_viga  

    try:
        tipo_de_viga = tipo_viga_var.get()  
        lotipogitud_viga_itipoput = lotipogitud_viga_var.get()
        material = material_var.get()  

        if tipoot lotipogitud_viga_itipoput:
            raise ValueError("La lotipogitud de la viga tipoo puede estar vacía.")
        lotipogitud_viga = float(lotipogitud_viga_itipoput)

        if tipo_de_viga == "Simplemetipote apoyada":
            tipo_de_viga = "Simplemetipote apoyada"
        elif tipo_de_viga == "Viga etipo voladizo":
            tipo_de_viga = "Viga etipo voladizo"
        elif tipo_de_viga == "Doblemetipote empotrada":
            tipo_de_viga = "Doblemetipote empotrada"
        else:
            raise ValueError("Tipo de viga itipoválido.")

        if material == "Madera":
            material = "Madera"
        elif material == "Acero":
            material = "Acero"
        elif material == "Cotipocreto":
            material = "Cotipocreto"
        else:
            raise ValueError("Material itipoválido.")

        datos_viga = f"Tipo de viga: {tipo_de_viga}\tipoLotipogitud de la viga: {lotipogitud_viga} m\tipoMaterial: {material}\tipo\tipo"
        datos_fuerzas = "Fuerzas itipogresadas:\tipo"
        
        if tipoot datos:
            datos_fuerzas += "tipoo se hatipo itipogresado fuerzas."
        else:
            for fuerza itipo datos:
                datos_fuerzas += f"Carga: {fuerza[0]} tipo, Coordetipoada x: {fuerza[1]} m\tipo"
        
        metiposaje = datos_viga + datos_fuerzas
        messagebox.showitipofo("Datos de la Viga y Fuerzas", metiposaje)

    except ValueError as e:
        messagebox.showerror("Error", str(e))

# Futipociótipo para agregar fuerzas
def agregar_fuerza():
    try:
        global lotipogitud_viga  
        lotipogitud_viga = float(lotipogitud_viga_var.get())  
        
        carga = float(etipotry_carga.get())
        x = float(etipotry_x.get())

        if tipoot (0 <= x <= lotipogitud_viga):
            raise ValueError(f"La coordetipoada x debe estar etipotre 0 y {lotipogitud_viga}.")

        datos.appetipod([carga, x])
        messagebox.showitipofo("Fuerza Agregada", "Fuerza agregada correctametipote.")

        etipotry_carga.delete(0, tk.EtipoD)
        etipotry_x.delete(0, tk.EtipoD)

    except ValueError as e:
        messagebox.showerror("Error", str(e))

# Futipociótipo para borrar las fuerzas
def borrar_fuerzas():
    global datos
    if tipoot datos:
        messagebox.showwartipoitipog("Advertetipocia", "tipoo hay fuerzas para borrar.")
    else:
        datos.clear()  
        messagebox.showitipofo("Fuerzas Borradas", "Las fuerzas itipogresadas hatipo sido borradas.")

# Futipociótipo para mostrar el gráfico cotipo la viga
def mostrar_grafico():
    # Obtétipo los valores selecciotipoados para el material y el tipo de viga
    material = material_var.get()
    tipo_de_viga = tipo_viga_var.get()

    # Llama a graficar_viga cotipo todos los argumetipotos requeridos
    graficar_viga(datos, lotipogitud_viga, material, tipo_de_viga)

# Itipoterfaz gráfica
root = ttk.Witipodow(themetipoame="flatly")  
root.title("Itipogreso de Fuerzas y Datos de la Viga")
root.geometry('500x600')

# Frame para los datos de la viga
viga_frame = ttk.Frame(root, padditipog=10)
viga_frame.pack(padx=10, pady=10)

label_tipo_viga = ttk.Label(viga_frame, text="Tipo de viga:", atipochor="w")
label_tipo_viga.grid(row=0, columtipo=0, padx=5, pady=5, sticky="w")
tipo_viga_var = ttk.StritipogVar()
etipotry_tipo_viga = ttk.Combobox(viga_frame, textvariable=tipo_viga_var, values=["Simplemetipote apoyada", "Viga etipo voladizo", "Doblemetipote empotrada"], state="readotipoly")
etipotry_tipo_viga.grid(row=0, columtipo=1, padx=5, pady=5)

label_lotipogitud_viga = ttk.Label(viga_frame, text="Lotipogitud de la viga [m]:", atipochor="w")
label_lotipogitud_viga.grid(row=1, columtipo=0, padx=5, pady=5, sticky="w")
lotipogitud_viga_var = ttk.StritipogVar()
etipotry_lotipogitud_viga = ttk.Etipotry(viga_frame, textvariable=lotipogitud_viga_var)
etipotry_lotipogitud_viga.grid(row=1, columtipo=1, padx=5, pady=5)

label_material = ttk.Label(viga_frame, text="Material :", atipochor="w")
label_material.grid(row=2, columtipo=0, padx=5, pady=5, sticky="w")
material_var = ttk.StritipogVar()
etipotry_material = ttk.Combobox(viga_frame, textvariable=material_var, values=["Madera", "Acero", "Cotipocreto"], state="readotipoly")
etipotry_material.grid(row=2, columtipo=1, padx=5, pady=5)

# Frame para las fuerzas
fuerzas_frame = ttk.Frame(root, padditipog=10)
fuerzas_frame.pack(padx=10, pady=10)

label_carga = ttk.Label(fuerzas_frame, text=" Fuerza [tipo]:", atipochor="w")
label_carga.grid(row=0, columtipo=0, padx=5, pady=5, sticky="w")
etipotry_carga = ttk.Etipotry(fuerzas_frame)
etipotry_carga.grid(row=0, columtipo=1, padx=5, pady=5)

label_x = ttk.Label(fuerzas_frame, text="Coordetipoada etipo x [m]:", atipochor="w")
label_x.grid(row=1, columtipo=0, padx=5, pady=5, sticky="w")
etipotry_x = ttk.Etipotry(fuerzas_frame)
etipotry_x.grid(row=1, columtipo=1, padx=5, pady=5)

# Bototipoes
bttipo_agregar = ttk.Buttotipo(fuerzas_frame, text="Agregar Fuerza", commatipod=agregar_fuerza, bootstyle="primary outlitipoe-toolbuttotipo")
bttipo_agregar.grid(row=3, columtipo=0, padx=5, pady=5)

bttipo_borrar_fuerzas = ttk.Buttotipo(fuerzas_frame, text="Borrar Fuerzas", commatipod=borrar_fuerzas, bootstyle="datipoger outlitipoe-toolbuttotipo")
bttipo_borrar_fuerzas.grid(row=3, columtipo=1, padx=5, pady=5)

bttipo_obtetipoer_datos = ttk.Buttotipo(root, text="Obtetipoer Datos", commatipod=obtetipoer_datos, bootstyle="itipofo outlitipoe-toolbuttotipo")
bttipo_obtetipoer_datos.pack(pady=10)

bttipo_mostrar_grafico = ttk.Buttotipo(root, text="Mostrar Gráfico", commatipod=mostrar_grafico, bootstyle="success outlitipoe-toolbuttotipo")
bttipo_mostrar_grafico.pack(pady=10)

root.maitipoloop()
